{"ast":null,"code":"var _jsxFileName = \"/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/App.js\",\n    _s = $RefreshSig$();\n\n// Fix castling issue with lichess\nimport './App.css';\nimport React, { useState } from 'react';\nimport Topbar from './components/Topbar/Topbar.js';\nimport DropdownMenu from './components/DropdownMenu/DropdownMenu';\nimport ChessboardMask from './components/ChessboardMask/ChessboardMask';\nimport { Chess } from 'chess.js';\nimport * as Functions from './ImportantFunctions.js';\nimport axios from 'axios';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // all the main data needed for the application should be declared here\n  const [game, setGame] = useState(new Chess());\n  const [userID, setUserID] = useState(\"\");\n  const [userInfoFromDB, setUserInfoFromDB] = useState({\n    books: [{\n      bookName: \"default\",\n      color: 'w',\n      positions: Functions.getELOspecificMoves(game.fen(), 700)\n    }]\n  });\n  const [status, setStatus] = useState([0, 0, 0]);\n  const [sqstyles, setSqstyles] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(''); // API calls\n\n  async function getUserData(userid) {\n    try {\n      let response = await axios.get(\"http://localhost:5000/users\", {\n        params: {\n          id: userid\n        }\n      });\n\n      if (response.statusText === \"OK\") {\n        return response.data;\n      } else {\n        console.log(\"Error inn getUserData\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in getUserData\");\n      console.log(e);\n    }\n  }\n\n  async function addUser(userid) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/users/recordUser\", {\n        id: userid\n      });\n\n      if (response.status === 204) {\n        console.log(\"new user created\");\n        return true;\n      } else {\n        console.log(\"Error inn newUser\");\n        console.log(response);\n        return false;\n      }\n    } catch (e) {\n      console.log(\"Error in newUser\");\n      console.log(e);\n      return false;\n    }\n  }\n\n  async function addPositions(userid, bookName, positions) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/users/addToBook\", {\n        id: userid,\n        bookName: bookName,\n        positions: positions\n      });\n\n      if (response.status === 204) {\n        openSnackbar(\"positions added\");\n      } else {\n        console.log(\"Error inn addPositions\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in addPositions\");\n      console.log(e);\n    }\n  }\n\n  async function deleteBook(userid, bookName) {\n    try {\n      console.log(\"before axios.delete in del book\");\n      let response = await axios.delete(`http://localhost:5000/deleteBook/${userid}/${bookName}`);\n      console.log(\"after response in delete book\");\n\n      if (response.status === 204) {\n        openSnackbar(\"book deleted\");\n      } else {\n        console.log(\"Error inn deleteBook\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in deleteBook\");\n      console.log(e);\n    }\n  }\n\n  async function createBook(userid, bookName, color, elo) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/createBook\", {\n        id: userid,\n        bookName: bookName,\n        color: color,\n        elo: elo\n      });\n\n      if (response.status === 204) {\n        openSnackbar(\"new book created\");\n      } else {\n        console.log(\"Error inn createBook\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in createBook\");\n      console.log(e);\n    }\n  }\n\n  async function safeChangeData(callback, userid) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    let cbreturn = await callback(userid, ...args);\n    let newData = await getUserData(userid);\n    setUserInfoFromDB(newData[0]);\n    console.log(\"data was set to\");\n    console.log(newData[0]);\n    return cbreturn;\n  } // functions that will be called directly (besides getUserData)\n\n\n  async function newBook(bookName, color, elo) {\n    console.log(\"newBook with name \" + bookName);\n    await safeChangeData(createBook, userID, bookName, color, elo);\n  }\n\n  async function newPositions(bookName, color, elo) {\n    let positions = await Functions.generatePositions(game.fen(), color, elo);\n    await safeChangeData(addPositions, userID, bookName, positions);\n  }\n\n  async function newUser(userid) {\n    if (userid < 10) {\n      openSnackbar(\"id must be at least 10 characters\");\n    } else {\n      let userAdded = await safeChangeData(addUser, userid);\n\n      if (userAdded) {\n        setUserID(userid);\n        openSnackbar(\"logged in as \" + userid);\n      } else {\n        openSnackbar(\"couldn't log in\");\n      }\n    }\n  }\n\n  async function removeBook(bookName) {\n    await safeChangeData(deleteBook, userID, bookName);\n  }\n\n  function randomPosition(bookName) {\n    console.log(\"randPos info\");\n    console.log(bookName);\n\n    for (let book of userInfoFromDB.books) {\n      console.log(book.bookName);\n\n      if (book.bookName === bookName) {\n        let positions = book.positions;\n        let len = positions.length;\n\n        if (len === 0) {\n          return \"no positions\";\n        } else {\n          let randIndex = Math.floor(Math.random() * len);\n          return positions[randIndex];\n        }\n      }\n    }\n\n    return \"no book\";\n  } // Event handling\n  // function called by the Dropdown when it needs to interact with App component\n\n\n  let customEventListener_dropdown = async e => {\n    console.log(e);\n    if (e.action === \"reset\") newGame();\n    if (e.action === \"deletebook\") removeBook(e.name);\n    if (e.action === \"addposition\") newPositions(e.name, e.color, e.elo);\n    if (e.action === \"newbook\") newBook(e.name, e.color, e.elo);\n  }; // function called by the topbar when it needs to interact with App component\n\n\n  let customEventListener_topbar = async e => {\n    if (e.action === \"login\") {\n      let userData = await getUserData(e.id);\n      console.log(userData);\n\n      if (Array.isArray(userData) && userData.length > 0) {\n        setUserInfoFromDB(userData[0]);\n        setUserID(e.id);\n        openSnackbar(\"logged in\");\n      } else if (Array.isArray(userData) && userData.length === 0) {\n        openSnackbar(\"no user of that name\");\n      } else {\n        openSnackbar(\"problem logging in\");\n      }\n    } else if (e.action === \"createid\") {\n      newUser(e.id);\n    }\n  };\n\n  function openSnackbar(message) {\n    setSnackbarMessage(message);\n    setSnackOpen(true);\n  }\n\n  function snackbarClose() {\n    setSnackOpen(false);\n  } // Bunch of stuff for making moves on the Chess board\n\n\n  function safeGameMutate(modify) {\n    setGame(g => {\n      const update = { ...g\n      };\n      modify(update);\n      return update;\n    });\n    setSqstyles({});\n  }\n\n  function safeMakeMove(move) {\n    safeGameMutate(() => {\n      game.move(move);\n    });\n  }\n\n  function newGame() {\n    safeGameMutate(game => {\n      game.reset();\n    });\n  }\n\n  async function makeGoodMove() {\n    const possibleMoves = game.moves();\n\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) {\n      return;\n    }\n\n    let bestMoves = await Functions.getELOspecificMoves(game.fen(), 900);\n    let bestMove = bestMoves[0];\n    safeMakeMove({\n      from: bestMove.slice(0, 2),\n      to: bestMove.slice(2, 4)\n    });\n  }\n\n  function onDrop(pieceMove) {\n    let move = null;\n    let prevFen = game.fen();\n    safeGameMutate(game => {\n      move = game.move({\n        from: pieceMove.sourceSquare,\n        to: pieceMove.targetSquare,\n        promotion: \"q\" // always promote to a queen for simplicity\n\n      });\n    });\n    if (move === null) return false; // illegal move\n\n    if (status[0] === \"learning\") {\n      handleGuess(prevFen, move);\n    }\n\n    return true;\n  }\n\n  async function handleGuess(fen, guess) {\n    let best = await Functions.getBestMove(fen);\n    let guessIsBest = best.slice(0, 2) === guess.from && best.slice(2, 4) === guess.to;\n\n    if (guessIsBest) {\n      setSqstyles({\n        [best.slice(0, 2)]: {\n          backgroundColor: \"lightblue\"\n        },\n        [best.slice(2, 4)]: {\n          backgroundColor: \"lightblue\"\n        }\n      });\n      setStatus([status[0], status[1], \"correct\"]);\n    } else {\n      setStatus([status[0], status[1], \"incorrect\"]);\n      safeGameMutate(game => {\n        game.undo();\n      });\n      setTimeout(() => {\n        safeMakeMove({\n          from: best.slice(0, 2),\n          to: best.slice(2, 4)\n        });\n        setSqstyles({\n          [best.slice(0, 2)]: {\n            backgroundColor: \"orange\"\n          },\n          [best.slice(2, 4)]: {\n            backgroundColor: \"orange\"\n          }\n        });\n      }, 1000);\n    }\n  }\n\n  let getNewPosition = () => {\n    setStatus([status[0], status[1], 0]);\n    let newPosition = randomPosition(status[1]);\n    safeGameMutate(() => game.load(newPosition));\n  }; // return\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      customEventListener: customEventListener_topbar,\n      userID: userID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      booksInfo: userInfoFromDB,\n      customEventListener: customEventListener_dropdown,\n      status: status,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChessboardMask, {\n      booksInfo: userInfoFromDB,\n      sqstyles: sqstyles,\n      getNewPosition: getNewPosition,\n      status: status,\n      fen: game.fen(),\n      onDrop: onDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackOpen,\n      autoHideDuration: 4000,\n      onClose: snackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: snackbarClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RB1xCXxQm6ppCxXspMla6NVgsTA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Topbar","DropdownMenu","ChessboardMask","Chess","Functions","axios","Snackbar","Alert","App","game","setGame","userID","setUserID","userInfoFromDB","setUserInfoFromDB","books","bookName","color","positions","getELOspecificMoves","fen","status","setStatus","sqstyles","setSqstyles","snackOpen","setSnackOpen","snackbarMessage","setSnackbarMessage","getUserData","userid","response","get","params","id","statusText","data","console","log","e","addUser","post","addPositions","openSnackbar","deleteBook","delete","createBook","elo","safeChangeData","callback","args","cbreturn","newData","newBook","newPositions","generatePositions","newUser","userAdded","removeBook","randomPosition","book","len","length","randIndex","Math","floor","random","customEventListener_dropdown","action","newGame","name","customEventListener_topbar","userData","Array","isArray","message","snackbarClose","safeGameMutate","modify","g","update","safeMakeMove","move","reset","makeGoodMove","possibleMoves","moves","game_over","in_draw","bestMoves","bestMove","from","slice","to","onDrop","pieceMove","prevFen","sourceSquare","targetSquare","promotion","handleGuess","guess","best","getBestMove","guessIsBest","backgroundColor","undo","setTimeout","getNewPosition","newPosition","load","width"],"sources":["/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/App.js"],"sourcesContent":["\n// Fix castling issue with lichess\nimport './App.css';\nimport React, { useState } from 'react';\nimport Topbar from './components/Topbar/Topbar.js'\nimport DropdownMenu from './components/DropdownMenu/DropdownMenu';\nimport ChessboardMask from './components/ChessboardMask/ChessboardMask';\nimport { Chess } from 'chess.js';\nimport * as Functions from './ImportantFunctions.js';\nimport axios from 'axios';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\n\nfunction App() {\n\n  // all the main data needed for the application should be declared here\n  const [game, setGame] = useState(new Chess());\n  const [userID, setUserID] = useState(\"\");\n  const [userInfoFromDB, setUserInfoFromDB] = useState(\n    {\n      books: [\n        {\n          bookName: \"default\",\n          color: 'w',\n          positions: Functions.getELOspecificMoves(game.fen(), 700)\n        }\n      ]\n    }\n  );\n  const [status, setStatus] = useState([0,0,0]);\n  const [sqstyles, setSqstyles] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  // API calls\n\n  async function getUserData(userid) {\n    try {\n      let response = await axios.get(\"http://localhost:5000/users\", { params: { id: userid } } );\n      if (response.statusText === \"OK\"){\n        return response.data;\n      }else {\n        console.log(\"Error inn getUserData\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in getUserData\");\n      console.log(e);\n    }\n  }\n\n  async function addUser(userid) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/users/recordUser\", { id: userid });\n      if (response.status === 204){\n        console.log(\"new user created\");\n        return true;\n      }else {\n        console.log(\"Error inn newUser\");\n        console.log(response);\n        return false;\n      }\n    } catch (e) {\n      console.log(\"Error in newUser\");\n      console.log(e);\n      return false;\n    }\n  }\n\n  async function addPositions(userid, bookName, positions) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/users/addToBook\", { id: userid, bookName: bookName, positions: positions});\n      if (response.status === 204){\n        openSnackbar(\"positions added\");\n      }else {\n        console.log(\"Error inn addPositions\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in addPositions\");\n      console.log(e);\n    }\n  }\n\n  async function deleteBook(userid, bookName) {\n    try {\n      console.log(\"before axios.delete in del book\");\n      let response = await axios.delete(`http://localhost:5000/deleteBook/${userid}/${bookName}`);\n      console.log(\"after response in delete book\");\n      if (response.status === 204){\n        openSnackbar(\"book deleted\");\n      }else {\n        console.log(\"Error inn deleteBook\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in deleteBook\");\n      console.log(e);\n    }\n  }\n\n  async function createBook(userid, bookName, color, elo) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/createBook\", { id: userid, bookName: bookName, color: color, elo: elo});\n      if (response.status === 204){\n        openSnackbar(\"new book created\");\n      }else {\n        console.log(\"Error inn createBook\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in createBook\");\n      console.log(e);\n    }\n  }\n\n  async function safeChangeData(callback, userid, ...args) {\n    let cbreturn = await callback(userid, ...args);\n    let newData = await getUserData(userid);\n    setUserInfoFromDB(newData[0]);\n    console.log(\"data was set to\");\n    console.log(newData[0]);\n    return cbreturn;\n  }\n\n  // functions that will be called directly (besides getUserData)\n  async function newBook(bookName, color, elo){\n    console.log(\"newBook with name \" + bookName);\n    await safeChangeData(createBook, userID, bookName, color, elo);\n  }\n\n  async function newPositions(bookName, color, elo) {\n    let positions = await Functions.generatePositions(game.fen(), color, elo);\n    await safeChangeData(addPositions, userID, bookName, positions);\n  }\n\n  async function newUser(userid) {\n    if (userid < 10){\n      openSnackbar(\"id must be at least 10 characters\")\n    } else {\n      let userAdded = await safeChangeData(addUser, userid);\n      if (userAdded) {\n        setUserID(userid);\n        openSnackbar(\"logged in as \" + userid);\n      } else {\n        openSnackbar(\"couldn't log in\");\n      }\n    }\n  }\n\n  async function removeBook(bookName) {\n    await safeChangeData(deleteBook, userID, bookName);\n  }\n\n  function randomPosition(bookName) {\n    console.log(\"randPos info\");\n    console.log(bookName);\n    for (let book of userInfoFromDB.books){\n      console.log(book.bookName)\n      if (book.bookName === bookName){\n        let positions = book.positions;\n        let len = positions.length;\n        if (len === 0){\n            return \"no positions\"\n        }\n        else {\n          let randIndex = Math.floor(Math.random() * len);\n          return positions[ randIndex ];\n        }\n      }\n    }\n    return \"no book\";\n  }\n\n  // Event handling\n\n  // function called by the Dropdown when it needs to interact with App component\n  let customEventListener_dropdown = async (e) => {\n\n    console.log(e);\n\n    if (e.action === \"reset\")\n      newGame();\n    if (e.action === \"deletebook\")\n      removeBook(e.name);\n    if (e.action === \"addposition\")\n      newPositions(e.name, e.color, e.elo);\n    if (e.action === \"newbook\")\n      newBook(e.name, e.color, e.elo);\n  };\n\n  // function called by the topbar when it needs to interact with App component\n  let customEventListener_topbar = async (e) => {\n    if (e.action === \"login\"){\n      let userData = await getUserData(e.id);\n      console.log(userData);\n      if (Array.isArray(userData) && userData.length > 0){\n        setUserInfoFromDB(userData[0]);\n        setUserID(e.id);\n        openSnackbar(\"logged in\");\n      } else if (Array.isArray(userData) && userData.length === 0) {\n        openSnackbar(\"no user of that name\");\n      } else {\n        openSnackbar(\"problem logging in\");\n      }\n    } else if (e.action === \"createid\") {\n      newUser(e.id);\n    }\n  };\n\n  function openSnackbar(message){\n    setSnackbarMessage(message);\n    setSnackOpen(true);\n  }\n  function snackbarClose(){\n    setSnackOpen(false);\n  }\n\n  // Bunch of stuff for making moves on the Chess board\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const update = { ...g };\n      modify(update);\n      return update;\n    });\n    setSqstyles({});\n  }\n  function safeMakeMove(move){\n    safeGameMutate(()=>{\n      game.move(move);\n    });\n  }\n  function newGame() {\n    safeGameMutate((game) => {\n      game.reset();\n    });\n  }\n  async function makeGoodMove() {\n    const possibleMoves = game.moves();\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0){\n      return;\n    }\n    let bestMoves = await Functions.getELOspecificMoves(game.fen(), 900);\n    let bestMove = bestMoves[0];\n    safeMakeMove({ from: bestMove.slice(0,2), to: bestMove.slice(2,4) });\n  }\n  function onDrop(pieceMove) {\n    let move = null;\n    let prevFen = game.fen();\n    safeGameMutate((game) => {\n      move = game.move({\n        from: pieceMove.sourceSquare,\n        to: pieceMove.targetSquare,\n        promotion: \"q\", // always promote to a queen for simplicity\n      });\n    });\n    if (move === null) return false; // illegal move\n    if (status[0] === \"learning\"){\n      handleGuess(prevFen, move);\n    }\n    return true;\n  }\n  async function handleGuess(fen, guess) {\n    let best = await Functions.getBestMove(fen);\n    let guessIsBest = best.slice(0,2) === guess.from && best.slice(2,4) === guess.to;\n    if (guessIsBest){\n      setSqstyles( { [best.slice(0,2)]: {backgroundColor: \"lightblue\"}, [best.slice(2,4)]: {backgroundColor: \"lightblue\"} } );\n      setStatus([status[0], status[1], \"correct\"]);\n    }\n    else {\n      setStatus([status[0], status[1], \"incorrect\"]);\n      safeGameMutate((game)=>{game.undo()});\n      setTimeout( ()=>{\n        safeMakeMove({ from: best.slice(0,2), to: best.slice(2,4) });\n        setSqstyles( { [best.slice(0,2)]: {backgroundColor: \"orange\"}, [best.slice(2,4)]: {backgroundColor: \"orange\"} } );},\n        1000);\n    }\n  }\n  let getNewPosition = () =>\n  {\n    setStatus([status[0], status[1], 0]);\n    let newPosition = randomPosition(status[1]);\n    safeGameMutate(()=>game.load(newPosition));\n  }\n\n  // return\n  return (\n    <div className=\"App\">\n      <Topbar customEventListener={customEventListener_topbar} userID={userID}></Topbar>\n      <DropdownMenu booksInfo={userInfoFromDB} customEventListener={customEventListener_dropdown}\n                    status={status} setStatus={setStatus}></DropdownMenu>\n      <ChessboardMask\n          booksInfo={userInfoFromDB} sqstyles={sqstyles}\n          getNewPosition={getNewPosition} status={status} fen={game.fen()} onDrop={onDrop}>\n      </ChessboardMask>\n      <Snackbar open={snackOpen} autoHideDuration={4000} onClose={snackbarClose}>\n        <Alert onClose={snackbarClose} severity=\"success\" sx={{ width: '100%' }}>\n         {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}