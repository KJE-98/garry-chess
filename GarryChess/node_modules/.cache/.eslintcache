[{"/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/index.js":"1","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/App.js":"2","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/reportWebVitals.js":"3","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/ImportantFunctions.js":"4","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/Topbar/Topbar.js":"5","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/DropdownMenu/DropdownMenu.js":"6","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/ChessboardMask/ChessboardMask.js":"7","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/Spinner/Spinner.js":"8","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/BookManager/BookManager.js":"9","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/NewBookPopup/NewBookPopup.js":"10","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/AddPositionPopup/AddPositionPopup.js":"11","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/Progression/Progression.js":"12"},{"size":535,"mtime":1653009948000,"results":"13","hashOfConfig":"14"},{"size":12224,"mtime":1654896886320,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1653009948000,"results":"16","hashOfConfig":"14"},{"size":11819,"mtime":1654380681703,"results":"17","hashOfConfig":"14"},{"size":1485,"mtime":1654468884137,"results":"18","hashOfConfig":"14"},{"size":1041,"mtime":1654312070974,"results":"19","hashOfConfig":"14"},{"size":3455,"mtime":1654897449394,"results":"20","hashOfConfig":"14"},{"size":252,"mtime":1653009948000,"results":"21","hashOfConfig":"14"},{"size":3453,"mtime":1654577730311,"results":"22","hashOfConfig":"14"},{"size":1554,"mtime":1654469174072,"results":"23","hashOfConfig":"14"},{"size":455,"mtime":1653967018324,"results":"24","hashOfConfig":"14"},{"size":1663,"mtime":1654895636667,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"13j99g9",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"29"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"29"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"29"},"/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/index.js",[],[],[],"/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/App.js",["73"],[],"\n// Fix castling issue with lichess\nimport './App.css';\nimport React, { useState } from 'react';\nimport Topbar from './components/Topbar/Topbar.js'\nimport DropdownMenu from './components/DropdownMenu/DropdownMenu';\nimport ChessboardMask from './components/ChessboardMask/ChessboardMask';\nimport { Chess } from 'chess.js';\nimport * as Functions from './ImportantFunctions.js';\nimport axios from 'axios';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\n\nlet guesses = 0;\nlet correctGuesses = 0;\nlet positionToDelete = null;\n\nfunction App() {\n\n  // all the main data needed for the application should be declared here\n  const [game, setGame] = useState(new Chess());\n  const [userID, setUserID] = useState(\"\");\n  const [userInfoFromDB, setUserInfoFromDB] = useState(\n    {\n      books: [\n        {\n          bookName: \"default\",\n          color: 'w',\n          elo: 700,\n          positions: Functions.defaultPositions,\n          score: 0,\n        }\n      ]\n    }\n  );\n  const [status, setStatus] = useState([0,0,0]);\n  const [sqstyles, setSqstyles] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n\n  // API calls\n  async function getUserData(userid) {\n    try {\n      let response = await axios.get(\"http://localhost:5000/users\", { params: { id: userid } } );\n      if (response.statusText === \"OK\"){\n        return response.data;\n      }else {\n        console.log(\"Error inn getUserData\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in getUserData\");\n      console.log(e);\n    }\n  }\n\n  async function addUser(userid) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/users/recordUser\", { id: userid });\n      if (response.status === 204){\n        console.log(\"new user created\");\n        return true;\n      }else {\n        console.log(\"Error inn newUser\");\n        console.log(response);\n        return false;\n      }\n    } catch (e) {\n      console.log(\"Error in newUser\");\n      console.log(e);\n      return false;\n    }\n  }\n\n  async function addPositions(userid, bookName, positions) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/users/addToBook\", { id: userid, bookName: bookName, positions: positions});\n      if (response.status === 204){\n        return true;\n      }else {\n        console.log(\"Error inn addPositions\");\n        console.log(response);\n        return false;\n      }\n    } catch (e) {\n      console.log(\"Error in addPositions\");\n      console.log(e);\n      return false;\n    }\n  }\n\n  async function updateScore(userid, bookName, amount) {\n    if (!userID) return;\n    try {\n      let response = await axios.post(\"http://localhost:5000/users/updateScore\", { id: userid, bookName: bookName, amount: amount});\n      if (response.status === 204){\n        return true;\n      }else {\n        console.log(\"Error inn updateScore\");\n        console.log(response);\n        return false;\n      }\n    } catch (e) {\n      console.log(\"Error in updateScore\");\n      console.log(e);\n      return false;\n    }\n  }\n\n  async function deleteBook(userid, bookName) {\n    try {\n      console.log(\"before axios.delete in del book\");\n      let response = await axios.delete(`http://localhost:5000/deleteBook/${userid}/${bookName}`);\n      console.log(\"after response in delete book\");\n      if (response.status === 204){\n        openSnackbar(\"book deleted\");\n      }else {\n        console.log(\"Error inn deleteBook\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in deleteBook\");\n      console.log(e);\n    }\n  }\n  ///deletePosition/:id/:bookName/:position\n  async function deletePosition(userid, bookName, fen) {\n    console.log(userid, bookName, fen);\n    try {\n      let response = await axios.delete(`http://localhost:5000/deletePosition/${userid}/${bookName}/`, { data: { position: fen }});\n      if (response.status === 204){\n        return true;\n      }else {\n        console.log(\"Error inn deletePosition\");\n        console.log(response);\n        return false;\n      }\n    } catch (e) {\n      console.log(\"Error in deletePosition\");\n      console.log(e);\n      return false;\n    }\n  }\n\n  async function createBook(userid, bookName, color, elo) {\n    try {\n      let response = await axios.post(\"http://localhost:5000/createBook\", { id: userid, bookName: bookName, color: color, elo: elo});\n      if (response.status === 204){\n        openSnackbar(\"new book created\");\n      }else {\n        console.log(\"Error inn createBook\");\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(\"Error in createBook\");\n      console.log(e);\n    }\n  }\n\n  async function safeChangeData(callback, userid, ...args) {\n    let cbreturn = await callback(userid, ...args);\n    let newData = await getUserData(userid);\n    if (Array.isArray(newData) && newData.length > 0){\n      setUserInfoFromDB(newData[0]);\n      console.log(\"data was set to\");\n      console.log(newData[0]);\n    }\n    return cbreturn;\n  }\n\n  // functions that will be called directly (besides getUserData)\n  async function newBook(bookName, color, elo){\n    for (let book of userInfoFromDB.books){\n      if (book.bookName === bookName){\n        openSnackbar(\"you already have a book of this name\");\n        return;\n      }\n    }\n    await safeChangeData(createBook, userID, bookName, color, elo);\n    setStatus([\"howToAddPositions\", 0, 0]);\n  }\n\n  async function newPositions(bookName, color, elo) {\n    let positions = await Functions.generatePositions(game.fen(), color, elo);\n    let success = await safeChangeData(addPositions, userID, bookName, positions);\n    if (success) {\n      openSnackbar(positions.length + \" positions added\");\n    } else {\n      openSnackbar(\"problem adding positions\");\n    }\n  }\n\n  async function newUser(userid) {\n    if (userid < 10){\n      openSnackbar(\"id must be at least 10 characters\")\n    } else {\n      let userAdded = await safeChangeData(addUser, userid);\n      if (userAdded) {\n        setUserID(userid);\n        openSnackbar(\"logged in as \" + userid);\n      } else {\n        openSnackbar(\"couldn't log in\");\n      }\n    }\n  }\n\n  async function removeBook(bookName) {\n    await safeChangeData(deleteBook, userID, bookName);\n  }\n\n  async function removePosition(){\n\n    if (status[0] !== \"learning\") {\n      openSnackbar(\"select a book first\");\n      return;\n    }\n    console.log(\"here\");\n    console.log(userInfoFromDB);\n    console.log(status[1]);\n    let success = await safeChangeData(deletePosition, userID, status[1], positionToDelete);\n    if (success){\n      openSnackbar(\"position deleted\");\n    } else {\n      openSnackbar(\"problem deleting position\");\n    }\n  }\n\n  function randomPosition(bookName) {\n    console.log(\"randPos info\");\n    console.log(bookName);\n    for (let book of userInfoFromDB.books){\n      console.log(book.bookName)\n      if (book.bookName === bookName){\n        let positions = book.positions;\n        let len = positions.length;\n        if (len === 0){\n            return \"no positions\"\n        }\n        else {\n          let randIndex = Math.floor(Math.random() * len);\n          return positions[ randIndex ];\n        }\n      }\n    }\n    return \"no book\";\n  }\n\n  // Event handling\n\n  // function called by the Dropdown when it needs to interact with App component\n  let customEventListener_dropdown = async (e) => {\n\n    if (e.action === \"reset\")\n      newGame();\n    if (e.action === \"deletebook\")\n      removeBook(e.name);\n    if (e.action === \"addposition\")\n      newPositions(e.name, e.color, e.elo);\n    if (e.action === \"newbook\")\n      newBook(e.name, e.color, e.elo);\n    if (e.action === \"startlearning\"){\n      setStatus(['learning', e.name, 0]);\n      guesses = 0;\n      correctGuesses = 0;\n    }\n  };\n\n  // function called by the topbar when it needs to interact with App component\n  let customEventListener_topbar = async (e) => {\n    setStatus([0,0,0]);\n    if (e.action === \"login\"){\n      let userData = await getUserData(e.id);\n      console.log(userData);\n      if (Array.isArray(userData) && userData.length > 0){\n        setUserInfoFromDB(userData[0]);\n        setUserID(e.id);\n        openSnackbar(\"logged in\");\n      } else if (Array.isArray(userData) && userData.length === 0) {\n        openSnackbar(\"no user of that name\");\n      } else {\n        openSnackbar(\"problem logging in\");\n      }\n    } else if (e.action === \"createid\") {\n      newUser(e.id);\n    }\n  };\n\n  function openSnackbar(message){\n    setSnackbarMessage(message);\n    setSnackOpen(true);\n  }\n  function snackbarClose(){\n    setSnackOpen(false);\n  }\n\n  // Bunch of stuff for making moves on the Chess board\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const update = { ...g };\n      modify(update);\n      return update;\n    });\n    setSqstyles({});\n  }\n  function safeMakeMove(move){\n    safeGameMutate(()=>{\n      game.move(move);\n    });\n  }\n  function newGame() {\n    safeGameMutate((game) => {\n      game.reset();\n    });\n  }\n  async function makeGoodMove() {\n    const possibleMoves = game.moves();\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0){\n      return;\n    }\n    let bestMoves = await Functions.getELOspecificMoves(game.fen(), 900);\n    let bestMove = bestMoves[0];\n    safeMakeMove({ from: bestMove.slice(0,2), to: bestMove.slice(2,4) });\n  }\n  function onDrop(pieceMove) {\n    let move = null;\n    let prevFen = game.fen();\n    safeGameMutate((game) => {\n      move = game.move({\n        from: pieceMove.sourceSquare,\n        to: pieceMove.targetSquare,\n        promotion: \"q\", // always promote to a queen for simplicity\n      });\n    });\n    if (move === null) return false; // illegal move\n    if (status[0] === \"learning\"){\n      handleGuess(prevFen, move);\n    }\n    return true;\n  }\n  async function handleGuess(fen, guess) {\n    let best = await Functions.getBestMove(fen);\n    let guessIsBest = best.slice(0,2) === guess.from && best.slice(2,4) === guess.to;\n    if (guessIsBest){\n      guesses++;\n      correctGuesses++;\n      setSqstyles( { [best.slice(0,2)]: {backgroundColor: \"lightblue\"}, [best.slice(2,4)]: {backgroundColor: \"lightblue\"} } );\n      setStatus([status[0], status[1], \"correct\"]);\n    }\n    else {\n      guesses++;\n      setStatus([status[0], status[1], \"incorrect\"]);\n      safeGameMutate((game)=>{game.undo()});\n      setTimeout( ()=>{\n        safeMakeMove({ from: best.slice(0,2), to: best.slice(2,4) });\n        setSqstyles( { [best.slice(0,2)]: {backgroundColor: \"orange\"}, [best.slice(2,4)]: {backgroundColor: \"orange\"} } );},\n        1000);\n    }\n    if (guesses > 9) {\n      console.log(\"here\");\n      let amount = correctGuesses < 1 ? -5 :\n                   correctGuesses < 5 ? -3 :\n                   correctGuesses < 8 ? -1 :\n                   correctGuesses < 9 ? 1 :\n                   correctGuesses < 10 ? 2 : 5;\n      guesses = 0;\n      correctGuesses = 0;\n      safeChangeData(updateScore, userID, status[1], amount);\n    }\n  }\n  let getNewPosition = () =>\n  {\n    setStatus([status[0], status[1], 0]);\n    let newPosition = randomPosition(status[1]);\n    safeGameMutate(()=>game.load(newPosition));\n    positionToDelete = newPosition;\n  }\n\n  // return\n  return (\n    <div className=\"App\">\n      <button onClick={()=>{updateScore(userID, \"book1\", 2)}}></button>\n      <button onClick={()=>{updateScore(userID, \"book1\", -2)}}></button>\n      <Topbar customEventListener={customEventListener_topbar} userID={userID}></Topbar>\n      <DropdownMenu userID={userID} booksInfo={userInfoFromDB} customEventListener={customEventListener_dropdown}\n                    status={status} setStatus={setStatus}></DropdownMenu>\n      <ChessboardMask\n          booksInfo={userInfoFromDB} sqstyles={sqstyles} userID={userID}\n          getNewPosition={getNewPosition} status={status} fen={game.fen()} onDrop={onDrop} removePosition={removePosition}>\n      </ChessboardMask>\n      <Snackbar open={snackOpen} autoHideDuration={4000} onClose={snackbarClose}>\n        <Alert onClose={snackbarClose} severity=\"success\" sx={{ width: '100%' }}>\n         {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/reportWebVitals.js",[],[],"/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/ImportantFunctions.js",[],[],"/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/Topbar/Topbar.js",["74"],[],"import React, { useState } from 'react';\nimport './Topbar.css';\nimport Popup from 'reactjs-popup';\n\nconst Topbar = (props) => {\n  let login = () => {\n    props.customEventListener({action: \"login\", id: document.getElementById('userid').value});\n  }\n\n  let createID = () => {\n    props.customEventListener({action: \"createid\", id: document.getElementById('createuserid').value});\n  }\n\n  return (\n  <div className=\"Topbar\">\n    <h2>\n        Garry Chess\n    </h2>\n    <h3> {props.userID ? props.userID : \" not logged in \"} </h3>\n    <Popup trigger={ open => <button>Login/Create Account</button>} closeOnDocumentClick position=\"center center\" modal>\n      {close =>\n        <div className='modal'>\n          <div className='header'> Log in </div>\n          <button className='close' onClick={close}>&times;</button>\n          <div className='content'>\n            {' '}\n            Log in with an existing id\n          </div>\n          <div className=\"actions\">\n            <input id='userid'></input>\n            <button onClick={login}>Login</button>\n          </div>\n          <div className='content'>\n            {' '}\n            Or, create a new id (at least 10 characters)\n          </div>\n          <div className=\"actions\">\n            <input id='createuserid'></input>\n            <button onClick={createID}>Create Account</button>\n          </div>\n        </div>\n      }\n    </Popup>\n  </div>\n  );\n};\n\nTopbar.propTypes = {};\n\nTopbar.defaultProps = {};\n\nexport default Topbar;\n","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/DropdownMenu/DropdownMenu.js",["75"],[],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './DropdownMenu.css';\nimport BookManager from '../BookManager/BookManager';\n\nconst DropdownMenu = (props) =>{\n  const [expanded, setExpanded] = useState(false);\n  let status = props.status;\n  let setStatus = props.setStatus;\n  let userID = props.userID;\n\n  let customEventListener_bookmanager = (e) => {\n    props.customEventListener(e);\n  }\n  return (\n    <div className=\"DropdownMenu\">\n      <button className=\"DropdownMenuButton\" onClick={(e) => {e.preventDefault(); return setExpanded(!expanded)}}>Manage Books</button>\n      { expanded && <BookManager booksInfo={props.booksInfo}\n                                 customEventListener={customEventListener_bookmanager}\n                                 status = {status}\n                                 setStatus = {setStatus}\n                                 userID={userID}></BookManager> }\n    </div>\n  );\n}\n\nDropdownMenu.propTypes = {};\n\nDropdownMenu.defaultProps = {};\n\nexport default DropdownMenu;\n","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/ChessboardMask/ChessboardMask.js",["76"],[],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './ChessboardMask.css';\nimport Chessboard from 'chessboardjsx';\nimport Progression from '../Progression/Progression';\n\nconst ChessboardMask = (props) => {\n  console.log(\"info\");\n  console.log(props.booksInfo);\n\n  let [thinDisplay, setThinDisplay] = useState(window.innerWidth < 650);\n\n  window.addEventListener('resize', handleResize);\n\n  function handleResize() {\n    setThinDisplay(window.innerWidth < 650);\n  }\n\n  function deletePosition(){\n    props.removePosition();\n  }\n\n  function statusMessage (status){\n    if (status[0] === 0)\n      return \"To get started, log in or create a new user in the upper right\";\n    if (status[0] === \"learning\"){\n      if (status[2]===\"correct\"){\n        return (<>\n                  <div>\n                    {\"Learning from book: \" + status[1]}\n                  </div>\n                  <div>\n                    Correct, score: {findScore(status[1], props.booksInfo)}\n                  </div>\n                </>);\n      }\n      if (status[2]===\"incorrect\"){\n        return (<>\n                  <div>\n                    {\"Learning from book: \" + status[1]}\n                  </div>\n                  <div>\n                    Incorrect, score: {findScore(status[1], props.booksInfo)}\n                  </div>\n\n                </>);\n      }\n      return \"Learning from book: \" + status[1] + \"score, \" + findScore(status[1], props.booksInfo);\n    }\n    if (status[0] === \"adding positions\"){\n      return \"to add to the book: \" + props.booksInfo.books[status[1]].bookName + \", play until you reach the desired position on the board, \"\n      + \"and click, \\\"auto generate positions\\\"\";\n    }\n    if (status[0] === \"howToAddPositions\"){\n      return \"to add positions to your new book, click the \\\"add to\\\" button on the book\";\n    }\n  }\n\n  function findScore(bookName, booksInfo) {\n    let thebook = booksInfo.books.filter((book)=>book.bookName === bookName);\n    if (thebook.length > 0)\n        return Math.max(0, Math.min(thebook[0].score,100));\n    return 0;\n  }\n\n  return(\n    <div className=\"sectionsOuter\">\n      <div className='ChessboardMask'>\n        <Chessboard squareStyles={props.sqstyles} position={props.fen} onDrop={props.onDrop}\n                    calcWidth={()=> !thinDisplay ? window.innerWidth/2 : window.innerWidth-50} />\n      </div>\n      <div className=\"sections\">\n        <div className={ !thinDisplay ? 'statusBarThin' : 'statusBarWide' }\n                style={{ backgroundColor:  props.status[2] === \"correct\"   ?  \"lightblue\"\n                                         : props.status[2] === \"incorrect\" ?  \"orange\"\n                                         :                                    \"#F6F6F9\" }}>\n          {statusMessage(props.status)}\n        </div>\n        {props.status[0] === \"learning\" &&\n        <>\n        <Progression percent={findScore(props.status[1], props.booksInfo)}></Progression>\n        <button className={ !thinDisplay ? 'thin' : 'wide' } onClick={props.getNewPosition}>\n          <div>\n            NEXT\n          </div>\n        </button>\n        { props.userID !== \"\" &&\n        <div>\n          <button onClick={deletePosition}> delete </button>\n          <span>this position from the book?</span>\n        </div>\n        }\n        </>\n        }\n      </div>\n    </div>\n  )\n}\n\nChessboardMask.propTypes = {};\n\nChessboardMask.defaultProps = {};\n\nexport default ChessboardMask;\n","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/Spinner/Spinner.js",["77"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"Spinner\">\n    Spinner Component\n  </div>\n);\n\nSpinner.propTypes = {};\n\nSpinner.defaultProps = {};\n\nexport default Spinner;\n",[],"/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/BookManager/BookManager.js",["78","79","80"],[],"import React, { useState } from 'react';\nimport './BookManager.css';\nimport AddPositionPopup from '../AddPositionPopup/AddPositionPopup.js';\nimport NewBookPopup from '../NewBookPopup/NewBookPopup.js';\nimport Popup from 'reactjs-popup';\n\nconst BookManager = (props) => {\n  let status = props.status;\n  let setStatus = props.setStatus;\n\n  // function called by the AddPositionPopup Componenet when it needs to interact with BookManager component\n  let customEventListener_addposition = (e) => {\n    if (status[0] != \"adding positions\" || status[1] < 0){\n      console.log(\"customEventListener_addposition was called but status is \" + status);\n    }\n    props.customEventListener({action: 'addposition',\n                               name: props.booksInfo.books[status[1]].bookName,\n                               color: props.booksInfo.books[status[1]].color,\n                               elo: props.booksInfo.books[status[1]].elo});\n  }\n\n  // function called by the NewBookPopup component when it needs to interact with BookManager component\n  let customEventListener_newbook = (e) => {\n    if (status[0] != \"adding book\"){\n      console.log(\"customEventListener_newbook was called but status is \" + status);\n    }\n    props.customEventListener({action: 'newbook', name: e.name, color: e.color, elo: e.elo });\n  }\n\n  let booksInfoList = props.booksInfo.books.map(\n    (info, index) =>\n    <button key={info.bookName + \":\" + info.color} className=\"card\"\n            onClick={()=>{props.customEventListener({action: 'startlearning', name: info.bookName})}}>\n      <h4>{info.bookName + \", \\n\" + info.color + \", \\n\" + info.elo}</h4>\n      { props.userID !== \"\" &&\n      <div onClick={(e)=>{e.stopPropagation();props.customEventListener({action: 'reset'}); setStatus([\"adding positions\", index, 0]);}}>\n        <span>Add to</span>\n      </div>\n      }\n      { props.userID &&\n          <Popup trigger={ open => <div><span>Delete</span></div>} closeOnDocumentClick position=\"center center\" modal>\n          {close =>\n            <div className='modal'>\n              <div className='header'> Are you sure? </div>\n              <button className='close' onClick={close}>&times;</button>\n              <div className='content'>\n                {' '}\n                Confirm you would like to delete book: {info.bookName}\n              </div>\n              <div className=\"actions\">\n                <button onClick={(e)=>{e.stopPropagation();props.customEventListener({action: 'deletebook', name: info.bookName})}}>delete</button>\n              </div>\n            </div>\n          }\n        </Popup>\n      }\n    </button>\n  )\n\n  return(\n    <>\n      <div className=\"BookManager\">\n        <div className='flexboxContainer'>\n          {booksInfoList}\n          { props.userID &&\n          <button className=\"card\" onClick={()=>{props.customEventListener({action: 'reset'});\n                                              setStatus([\"adding book\", 0, 0]);\n                                              }}>\n            <span>New Book</span>\n          </button>\n          }\n        </div>\n      </div>\n      { status[0] === \"adding positions\" && <AddPositionPopup customEventListener={customEventListener_addposition}></AddPositionPopup> }\n      { status[0] === \"adding book\" && <NewBookPopup customEventListener={customEventListener_newbook}></NewBookPopup> }\n    </>\n  )\n};\n\nBookManager.propTypes = {};\n\nBookManager.defaultProps = {};\n\nexport default BookManager;\n","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/NewBookPopup/NewBookPopup.js",["81","82"],[],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewBookPopup.css';\nimport LabeledSwitchMaterialUi from 'labeled-switch-material-ui';\n\nconst NewBookPopup = (props) => {\n  let [color, setColor] = useState('w');\n\n  function newBook() {\n    if (document.getElementById(\"bookNameInput\").value === \"\"){\n      document.getElementById(\"bookNameInput\").style.backgroundColor = \"lightblue\"\n      return;\n    }\n    props.customEventListener({action: \"newbook\",\n                               name: document.getElementById(\"bookNameInput\").value,\n                               color: color,\n                               elo: document.getElementById(\"elolevel\").value });\n  }\n  function exit() {\n    props.customEventListener({action: \"exit\"});\n  }\n\n  return(\n    <div className=\"NewBookPopup\">\n      <button onClick={newBook}> Create book </button>\n      <h5> with name </h5><input id=\"bookNameInput\"/>\n      <h5>playing as </h5>\n      <LabeledSwitchMaterialUi labelLeft=' w' labelRight='b' onChange={(knobOnLeft)=>{setColor(knobOnLeft ? 'w':'b')}}\n              styleLabelLeft={{color: \"black\"}} styleLabelRight={{color: \"black\"}}>\n      </LabeledSwitchMaterialUi>\n      <h5>, with opponent elo level of </h5>\n      <input type=\"number\" id=\"elolevel\" defaultValue={900} min={100} max={2200} onInput={()=>{document.getElementById(\"elolevel\").value = parseInt(document.getElementById(\"elolevel\").value)}}></input>\n    </div>\n  );\n}\n\nNewBookPopup.propTypes = {};\n\nNewBookPopup.defaultProps = {};\n\nexport default NewBookPopup;\n","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/AddPositionPopup/AddPositionPopup.js",["83"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AddPositionPopup.css';\n\nconst AddPositionPopup = (props) => {\n  function addPosition() {\n    props.customEventListener({action: \"addposition\"});\n  }\n\n  return (<div className=\"AddPositionPopup\">\n    <button onClick={addPosition}> Auto generate positions </button>\n  </div>)\n};\n\nAddPositionPopup.propTypes = {};\n\nAddPositionPopup.defaultProps = {};\n\nexport default AddPositionPopup;\n","/Users/kianeghbalnia/Desktop/garry-chess/GarryChess/src/components/Progression/Progression.js",["84"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Progression.css';\nimport \"react-step-progress-bar/styles.css\";\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\n\nconst Progression = (props) => (\n  <div className=\"Progression\">\n          <ProgressBar\n        percent={props.percent}\n        filledBackground=\"linear-gradient(to right, #fefb72, #f0bb31)\"\n      >\n        <Step transition=\"scale\">\n          {({ accomplished }) => (\n            <img\n              alt=\"\"\n              style={{ filter: `grayscale(${accomplished ? 0 : 80}%)` }}\n              width=\"60\"\n              src=\"chestnut.png\"\n            />\n          )}\n        </Step>\n        <Step transition=\"scale\">\n          {({ accomplished }) => (\n            <img\n              alt=\"\"\n              style={{ filter: `grayscale(${accomplished ? 0 : 80}%)` }}\n              width=\"30\"\n              src=\"chestnutbaby.png\"\n            />\n          )}\n        </Step>\n        <Step transition=\"scale\">\n          {({ accomplished }) => (\n            <img\n              alt=\"\"\n              style={{ filter: `grayscale(${accomplished ? 0 : 80}%)` }}\n              width=\"30\"\n              src=\"chestnutsapling.png\"\n            />\n          )}\n        </Step>\n        <Step transition=\"scale\">\n          {({ accomplished }) => (\n            <img\n              alt=\"\"\n              style={{ filter: `grayscale(${accomplished ? 0 : 80}%)` }}\n              width=\"30\"\n              src=\"chestnuttree.png\"\n            />\n          )}\n        </Step>\n      </ProgressBar>\n  </div>\n);\n\nProgression.propTypes = {};\n\nProgression.defaultProps = {};\n\nexport default Progression;\n",{"ruleId":"85","severity":1,"message":"86","line":315,"column":18,"nodeType":"87","messageId":"88","endLine":315,"endColumn":30},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":17},{"ruleId":"85","severity":1,"message":"90","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":17},{"ruleId":"85","severity":1,"message":"90","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":17},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":13,"column":19,"nodeType":"93","messageId":"94","endLine":13,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":24,"column":19,"nodeType":"93","messageId":"94","endLine":24,"endColumn":21},{"ruleId":"85","severity":1,"message":"90","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":17},{"ruleId":"85","severity":1,"message":"95","line":19,"column":12,"nodeType":"87","messageId":"88","endLine":19,"endColumn":16},{"ruleId":"85","severity":1,"message":"90","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":17},{"ruleId":"85","severity":1,"message":"90","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":17},"no-unused-vars","'makeGoodMove' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'PropTypes' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'exit' is defined but never used."]