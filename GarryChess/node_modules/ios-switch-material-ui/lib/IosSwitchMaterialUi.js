"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var defaultColorSwitch = '#e2e2e2';
var defaultColorKnobOnLeft = '#eeeeee';
var defaultColorKnobOnRight = '#5269d8';
var defaultAspectRatio = 2;
var defaultKnobSize = 18;
var paddingKnob = 2;
var styles = {
    knob: {
        borderRadius: '50%',
        position: 'relative',
        transition: 'background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, left 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'
    },
    switch: {
        display: 'inline-block',
        transition: 'background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'
    }
};
var IosSwitchMaterialUi = (function (_super) {
    __extends(IosSwitchMaterialUi, _super);
    function IosSwitchMaterialUi(props) {
        var _this = _super.call(this, props) || this;
        _this.handleChange = function () {
            var _a = _this.props, disabled = _a.disabled, onChange = _a.onChange;
            if (disabled) {
                return;
            }
            var newKnobOnLeft = !_this.isKnobOnLeft();
            if (_this.props.knobOnLeft === undefined) {
                _this.setState({
                    knobOnLeft: newKnobOnLeft
                });
            }
            onChange && onChange(newKnobOnLeft);
        };
        _this.isKnobOnLeft = function () {
            return _this.props.knobOnLeft !== undefined ? _this.props.knobOnLeft : _this.state.knobOnLeft;
        };
        _this.state = {
            knobOnLeft: props.knobOnLeft || props.defaultKnobOnLeft || false
        };
        return _this;
    }
    IosSwitchMaterialUi.prototype.render = function () {
        return (React.createElement("div", { onClick: this.handleChange, style: this.getStyleForSwitch() },
            React.createElement("div", { style: this.getStyleForKnob() })));
    };
    IosSwitchMaterialUi.prototype.getStyleForSwitch = function () {
        var disabled = this.props.disabled;
        var backgroundColor = this.getSwitchColor();
        var knobSize = this.getKnobSize();
        var switchWidth = this.getSwitchWidth();
        var switchHeight = this.getSwitchHeight();
        var css = __assign(__assign({}, styles.switch), { backgroundColor: backgroundColor, borderRadius: knobSize, cursor: disabled ? undefined : 'pointer', height: switchHeight, minHeight: switchHeight, minWidth: switchWidth, opacity: disabled ? 0.4 : 1, top: paddingKnob, width: switchWidth });
        return css;
    };
    IosSwitchMaterialUi.prototype.getSwitchColor = function () {
        var colorSwitch = this.props.colorSwitch;
        return isEmpty(colorSwitch) ? defaultColorSwitch : colorSwitch;
    };
    IosSwitchMaterialUi.prototype.getSwitchWidth = function () {
        return this.getAspectRatio() * this.getSwitchHeight();
    };
    IosSwitchMaterialUi.prototype.getAspectRatio = function () {
        var aspectRatio = this.props.aspectRatio;
        return aspectRatio ? aspectRatio : defaultAspectRatio;
    };
    IosSwitchMaterialUi.prototype.getSwitchHeight = function () {
        return this.getKnobSize() + 2 * paddingKnob;
    };
    IosSwitchMaterialUi.prototype.getKnobSize = function () {
        var knobSize = this.props.knobSize;
        return knobSize ? knobSize : defaultKnobSize;
    };
    IosSwitchMaterialUi.prototype.getStyleForKnob = function () {
        var knobOnLeft = this.isKnobOnLeft();
        var backgroundColor = this.getKnobColor(knobOnLeft);
        var knobSize = this.getKnobSize();
        var switchWidth = this.getSwitchWidth();
        return __assign(__assign({}, styles.knob), { backgroundColor: backgroundColor, height: knobSize, left: knobOnLeft ? paddingKnob : switchWidth - knobSize - paddingKnob, top: paddingKnob, width: knobSize });
    };
    IosSwitchMaterialUi.prototype.getKnobColor = function (knobOnLeft) {
        var _a = this.props, colorKnobOnLeft = _a.colorKnobOnLeft, colorKnobOnRight = _a.colorKnobOnRight;
        if (knobOnLeft && isEmpty(colorKnobOnLeft) === false) {
            return colorKnobOnLeft;
        }
        if (knobOnLeft !== true && isEmpty(colorKnobOnRight) === false) {
            return colorKnobOnRight;
        }
        return knobOnLeft ? defaultColorKnobOnLeft : defaultColorKnobOnRight;
    };
    return IosSwitchMaterialUi;
}(React.Component));
var isEmpty = function (str) { return (str !== undefined && str.length > 0) === false; };
exports.default = IosSwitchMaterialUi;
//# sourceMappingURL=IosSwitchMaterialUi.js.map